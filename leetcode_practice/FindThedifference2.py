

"""
Runtime: 36 ms, faster than 60.09% of Python3 online submissions for Find the Difference.
Memory Usage: 14.4 MB, less than 37.37% of Python3 online submissions for Find the Difference.
"""

"""
You are given two strings s and t.

String t is generated by random shuffling string s and then add one more letter at a random position.

Return the letter that was added to t.
"""
class Solution:
    def findTheDifference(self, s: str, t: str) -> str:
        letters = {}
        second_letters = {}
        #create hashtable of how many times s letter's are seen
        #with an associated int value
        for letter in s:
            if letter not in letters:
                letters[letter] = 1
            else: 
                letters[letter] += 1
            
        #create hashtable of how many times t letter's are seen
        #with an associated int value
        for letter in t:
            if letter not in second_letters:
                second_letters[letter] = 1
            else: 
                second_letters[letter] += 1
        #loop through every letter of the modified string
        for i in t:
            #if the letter exits in the original string
            if i in letters:
               #check to see if the two strings haven't been seen the same amount of times
               #the first string will never have more instances of a letter than the modified string
                if second_letters[i] !=letters[i]:
                    return i
                
            #if we see the string in the second string and not the first
            #its automatically the added string
            else:
                return i
            